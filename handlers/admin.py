# handlers/admin.py
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from utils.user_manager import ALLOWED_USERS

router = Router()

class AdminStates(StatesGroup):
    waiting_user_id = State()

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
ADMIN_ID = "129077607"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID

def is_admin(user_id: str) -> bool:
    return str(user_id) == ADMIN_ID

@router.message(Command("admin"))
async def admin_panel(message: Message):
    user_id = str(message.from_user.id)
    
    if not is_admin(user_id):
        await message.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
        return
    
    users_list = "\n".join([f"üë§ {user_id}" for user_id in ALLOWED_USERS])
    
    await message.answer(
        f"üõ†Ô∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
        f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(ALLOWED_USERS)}):\n{users_list}\n\n"
        f"–ö–æ–º–∞–Ω–¥—ã:\n"
        f"/add_user - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        f"/remove_user - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )

@router.message(Command("add_user"))
async def add_user_start(message: Message, state: FSMContext):
    user_id = str(message.from_user.id)
    
    if not is_admin(user_id):
        await message.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
        return
    
    await state.set_state(AdminStates.waiting_user_id)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")

@router.message(AdminStates.waiting_user_id)
async def add_user_complete(message: Message, state: FSMContext):
    new_user_id = message.text.strip()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ ID —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ü–∏—Ñ—Ä
        int(new_user_id)
        
        if new_user_id in ALLOWED_USERS:
            await message.answer("‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ")
        else:
            ALLOWED_USERS.append(new_user_id)
            await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫")
        
        await state.clear()
        
    except ValueError:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. ID –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä.")

@router.message(Command("remove_user"))
async def remove_user_start(message: Message, state: FSMContext):
    user_id = str(message.from_user.id)
    
    if not is_admin(user_id):
        await message.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
        return
    
    users_list = "\n".join([f"{i+1}. {user_id}" for i, user_id in enumerate(ALLOWED_USERS) if user_id != ADMIN_ID])
    
    if users_list:
        await message.answer(
            f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n{users_list}\n\n"
            f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞:"
        )
        await state.set_state(AdminStates.waiting_user_id)
    else:
        await message.answer("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")

# –î–æ–±–∞–≤—å —ç—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ __init__.py
