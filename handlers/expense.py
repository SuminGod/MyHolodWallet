# handlers/expense.py
import datetime
from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
import gspread
from utils.cancel_handler import cancel_handler

from keyboards import main_kb, expense_kb
from config import GSHEET_NAME, GSHEET_CREDS_JSON

router = Router()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
gc = gspread.service_account(filename=GSHEET_CREDS_JSON)
sheet_expense = gc.open(GSHEET_NAME).worksheet("–†–∞—Å—Ö–æ–¥—ã")

class ExpenseStates(StatesGroup):
    category = State()
    amount = State()

# ========== –†–ê–°–•–û–î–´ ==========
@router.message(lambda m: m.text == "üì§ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥")
async def add_expense_start(message: Message, state: FSMContext):
    await state.set_state(ExpenseStates.category)
    await message.answer("–ù–∞ —á—Ç–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª?", reply_markup=expense_kb)

@router.message(ExpenseStates.category)
async def process_expense_category(message: Message, state: FSMContext):
    if await cancel_handler(message, state):
        return
        
    await state.update_data(category=message.text)
    await state.set_state(ExpenseStates.amount)
    await message.answer("üí∞ –°–∫–æ–ª—å–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª?")

@router.message(ExpenseStates.amount)
async def process_expense_amount(message: Message, state: FSMContext):
    try:
        data = await state.get_data()
        category = data["category"]
        amount = float(message.text.replace(',', '.'))
        
        today = datetime.date.today().strftime("%d.%m.%Y")
        values = [today, category, amount, ""]
        sheet_expense.append_row(values)
        
        await message.answer(f"‚úÖ –†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω: {amount} ‚ÇΩ", reply_markup=main_kb)
        await state.clear()
        
    except ValueError:
        await message.answer("‚ùå –í–≤–µ–¥–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Å—É–º–º—É:")
        # –û–ë–†–ê–ë–û–¢–ö–ê –õ–Æ–ë–´–• –ù–ï–û–ë–†–ê–ë–û–¢–ê–ù–ù–´–• –°–û–û–ë–©–ï–ù–ò–ô

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏–∑ –ª—é–±–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
@router.message(lambda m: m.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_to_main(message: Message, state: FSMContext):
    await state.clear()
    from keyboards import main_kb
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_kb)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞
@router.message(lambda m: m.text == "üì§ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥")
async def handle_expense_button(message: Message, state: FSMContext):
    await add_expense_start(message, state)