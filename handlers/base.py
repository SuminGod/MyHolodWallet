# handlers/base.py
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import F

from keyboards import main_kb
from utils.user_manager import sheets_manager

router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    user_id = str(message.from_user.id)
    
    if sheets_manager.is_user_allowed(user_id):
        await message.answer("üíº –£—á–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤", reply_markup=main_kb)
    else:
        await message.answer(
            "üîí –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é.\n"
            "–û–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.\n\n"
            f"–¢–≤–æ–π ID: {user_id}"
        )

# –ú–∏–¥–ª–≤–∞—Ä—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
@router.message(F.chat.type == "private")
async def check_access_middleware(message: Message):
    user_id = str(message.from_user.id)
    if not sheets_manager.is_user_allowed(user_id):
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –û–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return
